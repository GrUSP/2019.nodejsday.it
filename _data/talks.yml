-
  speaker_id: supriya-aggarwal
  image: supriya-aggarwal.jpg
  keynote: false
  title: "Why GraphQL vs. Why not GraphQL"
  extract: >
    In the last few years, GraphQL has been growing in popularity. A lot of companies have started adopting this
    technology to build their APIs. It has been gaining a lot of traction. In this talk, we’ll first go on to see how
    GraphQL overcomes some of the major limitations of REST. Post that, we’ll discuss some points on the case against
    GraphQL so you can have a clearer idea of whether you need GraphQL, before you jump into using it at work.
-
  speaker_id: colin-ihrig
  image: colin-ihrig.jpg
  keynote: false
  title: "Getting Started with gRPC and Node.js"
  extract: >
    gRPC is a language independent framework for making remote procedure calls used by large companies such as Netflix,
    Docker, Google, and more. gRPC leverages technologies such as HTTP2 and protocol buffers to create efficient network
    based applications. This talk provides an introduction to basic gRPC concepts, and shows how the framework can be
    used in both browser and Node.js applications. This talk will compare and contrast the various modules available to
    JavaScript developers, including grpc, @grpc/grpc-js, @grpc/proto-loader, grpc-server-js, and grpc-web. Finally,
    the talk will discuss certain architectural tradeoffs that come with gRPC-based systems.
-
  speaker_id: simona-cotin
  image: simona-cotin.jpg
  keynote: false
  title: "Build Scalable APIs using GraphQL and Serverless"
  extract: >
    Current trends in software and backend architecture have been evolving towards a more loosely coupled more granular design. 
    I am sure most of you have heard of microservice based architectures. 
    The latest development on that front in the past couple of years has been the advent of serverless which allows you 
    to run applications in very cost effective ephemeral services. This is why it is important to have a proper gateway for your API 
    that is able to route all your requests to the designated endpoint.
    GraphQL stands out in that respect as being a mature open sourced standard started at Facebook. 
    We will first have a look at how we set up our own GraphQL server locally, then we will explore the Query language
    and schema definitions it provides which allows you essentially query your mesh of services from a single point of entry. 
    The beauty of that is it will notify you early if any of your endpoints is misbehaving or the schemas are out of date by erroring out.
    Another advantage of this is that it allows for your API documentation to be a real time process 
    and it will give you what one may call an API playground where you can query and explore your API.
    After we explore our serverless API we will have a look at the more advanced features and standards
    around mutators and resolvers and then we will close by going all in, full serverless and deploy our graphql server 
    to a function in the cloud. 
